/*
 * @author Mário Soares
 * @contributors Jefferson González
 * 
 * @license 
 * This file is part of wxPHP check the LICENSE file for information.
 * 
 * @note
 * This file was auto-generated by the wxPHP source maker
*/

#ifndef WXPHP_OTHERS_H_GUARD
#define WXPHP_OTHERS_H_GUARD

#include "references.h"
#include "object_types.h"

ZEND_BEGIN_ARG_INFO_EX(wxphp_others_get_args, 0, 0, 1)
    ZEND_ARG_INFO(0, name)
ZEND_END_ARG_INFO()

extern zend_class_entry* php_wxScrolledWindow_entry;
extern zend_object_handlers wxphp_wxScrolledWindow_object_handlers;
void php_wxScrolledWindow_destruction_handler(zend_resource*);

class wxScrolledWindow_php: public wxScrolledWindow{
    public:

    wxScrolledWindow_php():wxScrolledWindow(){}
    wxScrolledWindow_php(wxWindow* parent, wxWindowID winid=wxID_ANY, const wxPoint& pos=wxDefaultPosition, const wxSize& size=wxDefaultSize, long style=wxScrolledWindowStyle, const wxString& name=wxPanelNameStr):wxScrolledWindow(parent, winid, pos, size, style, name){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxScrolledWindow{
    wxScrolledWindow_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxScrolledWindow;

void php_wxScrolledWindow_free(void *object);
zend_object* php_wxScrolledWindow_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxScrolledWindow_functions[] = {
    PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxEvtHandler, Connect, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxEvtHandler, AddFilter, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxEvtHandler, AddPendingEvent, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxEvtHandler, DeletePendingEvents, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxEvtHandler, GetEvtHandlerEnabled, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxEvtHandler, GetNextHandler, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxEvtHandler, GetPreviousHandler, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxEvtHandler, IsUnlinked, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxEvtHandler, ProcessEvent, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxEvtHandler, ProcessEventLocally, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxEvtHandler, ProcessPendingEvents, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxEvtHandler, QueueEvent, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxEvtHandler, RemoveFilter, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxEvtHandler, SafelyProcessEvent, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxEvtHandler, SetEvtHandlerEnabled, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxEvtHandler, Unlink, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Show, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, FindWindowById, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, FindWindow, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Enable, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Disable, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Close, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetSizer, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetSizerAndFit, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetToolTip, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetWindowStyle, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetWindowStyleFlag, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Update, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, UpdateWindowUI, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Validate, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, WarpPointer, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, WindowToClientSize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, UnsetToolTip, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, UnreserveControlId, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, TransferDataToWindow, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, TransferDataFromWindow, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, ToggleWindowStyle, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Thaw, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, ShouldInheritColours, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetVirtualSize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetValidator, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetTransparent, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetSizeHints, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetSize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetScrollbar, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetScrollPos, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, AcceptsFocusFromKeyboard, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, AcceptsFocusRecursively, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, AddChild, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, AlwaysShowScrollbars, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, CacheBestSize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, CanScroll, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, CanSetTransparent, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, CaptureMouse, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Center, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, CenterOnParent, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Centre, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, CentreOnParent, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, ClearBackground, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, ClientToScreen, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, ClientToWindowSize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, ConvertDialogToPixels, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, ConvertPixelsToDialog, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, DragAcceptFiles, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, DoUpdateWindowUI, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, FindFocus, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, FindWindowByLabel, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, FindWindowByName, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Fit, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, FitInside, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Freeze, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetAutoLayout, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetBackgroundColour, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetBackgroundStyle, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetBestSize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetBestVirtualSize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetBorder, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetCapture, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetCaret, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetCharHeight, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetCharWidth, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Destroy, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, DestroyChildren, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetClientAreaOrigin, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetClientRect, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetClientSize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetContainingSizer, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetCursor, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetEffectiveMinSize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetEventHandler, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetExtraStyle, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetFont, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetForegroundColour, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetGrandParent, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetHandle, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetHelpText, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetHelpTextAtPoint, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetId, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetLabel, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetMaxClientSize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetMaxHeight, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetMaxSize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetMaxWidth, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetMinClientSize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetMinHeight, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetMinSize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetMinWidth, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetName, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetNextSibling, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetParent, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetPopupMenuSelectionFromUser, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetPosition, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetPrevSibling, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetRect, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetScreenPosition, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetScreenRect, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetScrollPos, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetScrollRange, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetScrollThumb, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetSize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetSizer, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetTextExtent, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetToolTip, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetToolTipText, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetUpdateClientRect, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetUpdateRegion, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetValidator, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetVirtualSize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetWindowBorderSize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetWindowStyle, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetWindowStyleFlag, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetWindowVariant, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, HandleAsNavigationKey, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, HandleWindowEvent, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, HasCapture, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, HasExtraStyle, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, HasFlag, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, HasFocus, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, HasMultiplePages, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, HasScrollbar, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, HasTransparentBackground, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Hide, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, HitTest, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetLayoutDirection, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, InheritAttributes, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, InformFirstDirection, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, InvalidateBestSize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, IsBeingDeleted, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, IsDoubleBuffered, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, IsEnabled, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, IsExposed, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, IsFrozen, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, IsRetained, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, IsScrollbarAlwaysShown, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, IsShown, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, IsShownOnScreen, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, IsThisEnabled, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, IsTopLevel, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, LineDown, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, LineUp, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Lower, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Move, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, MoveAfterInTabOrder, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, MoveBeforeInTabOrder, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Navigate, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, NavigateIn, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, NewControlId, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, PageDown, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, PageUp, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, PopupMenu, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, PostSizeEvent, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, PostSizeEventToParent, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, ProcessWindowEvent, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, ProcessWindowEventLocally, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, PushEventHandler, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Raise, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Refresh, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, RefreshRect, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, ReleaseMouse, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, RemoveChild, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, RemoveEventHandler, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Reparent, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, ScreenToClient, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, ScrollLines, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, ScrollPages, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SendSizeEvent, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SendSizeEventToParent, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetAutoLayout, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetBackgroundColour, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetBackgroundStyle, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetCanFocus, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetCaret, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetClientSize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetConstraints, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetContainingSizer, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetCursor, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetDropTarget, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetEventHandler, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetExtraStyle, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetFocusFromKbd, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetFont, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetForegroundColour, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetHelpText, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetId, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetInitialSize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetLabel, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetLayoutDirection, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetMaxClientSize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetMaxSize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetMinClientSize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetMinSize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetName, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetNextHandler, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetOwnBackgroundColour, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetOwnFont, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetOwnForegroundColour, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetPosition, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetPreviousHandler, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetThemeEnabled, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetWindowVariant, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxPanel, AcceptsFocus, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxPanel, Create, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxPanel, InitDialog, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxPanel, Layout, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxPanel, SetFocus, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxPanel, SetFocusIgnoringChildren, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxScrolled, SetScrollRate, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxScrolled, SetScrollbars, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxScrolled, SetTargetRect, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxScrolled, SetTargetWindow, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxScrolled, ShowScrollbars, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxScrolled, StopAutoScrolling, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxScrolled, SetScrollPageSize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxScrolled, SetScale, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxScrolled, Scroll, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxScrolled, SendAutoScrollEvents, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxScrolled, PrepareDC, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxScrolled, IsAutoScrolling, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxScrolled, GetViewStart, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxScrolled, GetTargetWindow, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxScrolled, GetTargetRect, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxScrolled, GetScrollPixelsPerUnit, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxScrolled, GetScrollPageSize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxScrolled, GetScrollLines, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxScrolled, GetScaleY, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxScrolled, GetScaleX, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxScrolled, EnableScrolling, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxScrolled, DoPrepareDC, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxScrolled, DisableKeyboardScrolling, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxScrolled, CalcUnscrolledPosition, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxScrolled, CalcScrolledPosition, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxScrolled, AdjustScrollbars, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxScrolledWindow, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxScrolledWindow * php_wxScrolledWindow_fetch_object(zend_object *obj) {
    return (zo_wxScrolledWindow *)(
        (char *)(obj) - XtOffsetOf(zo_wxScrolledWindow, zo)
    );
}

#define Z_wxScrolledWindow_P(zv) \
    php_wxScrolledWindow_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxRibbonButtonBarButtonBase_entry;
extern zend_object_handlers wxphp_wxRibbonButtonBarButtonBase_object_handlers;
void php_wxRibbonButtonBarButtonBase_destruction_handler(zend_resource*);

class wxRibbonButtonBarButtonBase_php{
    public:

    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxRibbonButtonBarButtonBase{
    wxRibbonButtonBarButtonBase_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxRibbonButtonBarButtonBase;

void php_wxRibbonButtonBarButtonBase_free(void *object);
zend_object* php_wxRibbonButtonBarButtonBase_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxRibbonButtonBarButtonBase_functions[] = {
    PHP_FE_END
};
#endif


static inline zo_wxRibbonButtonBarButtonBase * php_wxRibbonButtonBarButtonBase_fetch_object(zend_object *obj) {
    return (zo_wxRibbonButtonBarButtonBase *)(
        (char *)(obj) - XtOffsetOf(zo_wxRibbonButtonBarButtonBase, zo)
    );
}

#define Z_wxRibbonButtonBarButtonBase_P(zv) \
    php_wxRibbonButtonBarButtonBase_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxRibbonGalleryItem_entry;
extern zend_object_handlers wxphp_wxRibbonGalleryItem_object_handlers;
void php_wxRibbonGalleryItem_destruction_handler(zend_resource*);

class wxRibbonGalleryItem_php{
    public:

    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxRibbonGalleryItem{
    wxRibbonGalleryItem_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxRibbonGalleryItem;

void php_wxRibbonGalleryItem_free(void *object);
zend_object* php_wxRibbonGalleryItem_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxRibbonGalleryItem_functions[] = {
    PHP_FE_END
};
#endif


static inline zo_wxRibbonGalleryItem * php_wxRibbonGalleryItem_fetch_object(zend_object *obj) {
    return (zo_wxRibbonGalleryItem *)(
        (char *)(obj) - XtOffsetOf(zo_wxRibbonGalleryItem, zo)
    );
}

#define Z_wxRibbonGalleryItem_P(zv) \
    php_wxRibbonGalleryItem_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxRibbonToolBarToolBase_entry;
extern zend_object_handlers wxphp_wxRibbonToolBarToolBase_object_handlers;
void php_wxRibbonToolBarToolBase_destruction_handler(zend_resource*);

class wxRibbonToolBarToolBase_php{
    public:

    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxRibbonToolBarToolBase{
    wxRibbonToolBarToolBase_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxRibbonToolBarToolBase;

void php_wxRibbonToolBarToolBase_free(void *object);
zend_object* php_wxRibbonToolBarToolBase_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxRibbonToolBarToolBase_functions[] = {
    PHP_FE_END
};
#endif


static inline zo_wxRibbonToolBarToolBase * php_wxRibbonToolBarToolBase_fetch_object(zend_object *obj) {
    return (zo_wxRibbonToolBarToolBase *)(
        (char *)(obj) - XtOffsetOf(zo_wxRibbonToolBarToolBase, zo)
    );
}

#define Z_wxRibbonToolBarToolBase_P(zv) \
    php_wxRibbonToolBarToolBase_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxGridCellCoords_entry;
extern zend_object_handlers wxphp_wxGridCellCoords_object_handlers;
void php_wxGridCellCoords_destruction_handler(zend_resource*);

class wxGridCellCoords_php: public wxGridCellCoords{
    public:

    wxGridCellCoords_php():wxGridCellCoords(){}
    wxGridCellCoords_php(int row, int col):wxGridCellCoords(row, col){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxGridCellCoords{
    wxGridCellCoords_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxGridCellCoords;

void php_wxGridCellCoords_free(void *object);
zend_object* php_wxGridCellCoords_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxGridCellCoords_functions[] = {
    PHP_ME(php_wxGridCellCoords, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_ME(php_wxGridCellCoords, GetRow, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellCoords, SetRow, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellCoords, GetCol, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellCoords, SetCol, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellCoords, Set, NULL, ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxGridCellCoords * php_wxGridCellCoords_fetch_object(zend_object *obj) {
    return (zo_wxGridCellCoords *)(
        (char *)(obj) - XtOffsetOf(zo_wxGridCellCoords, zo)
    );
}

#define Z_wxGridCellCoords_P(zv) \
    php_wxGridCellCoords_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxNonOwnedWindow_entry;
extern zend_object_handlers wxphp_wxNonOwnedWindow_object_handlers;
void php_wxNonOwnedWindow_destruction_handler(zend_resource*);

class wxNonOwnedWindow_php: public wxNonOwnedWindow{
    public:

    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxNonOwnedWindow{
    wxNonOwnedWindow_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxNonOwnedWindow;

void php_wxNonOwnedWindow_free(void *object);
zend_object* php_wxNonOwnedWindow_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxNonOwnedWindow_functions[] = {
    PHP_ME(php_wxNonOwnedWindow, SetShape, NULL, ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxNonOwnedWindow * php_wxNonOwnedWindow_fetch_object(zend_object *obj) {
    return (zo_wxNonOwnedWindow *)(
        (char *)(obj) - XtOffsetOf(zo_wxNonOwnedWindow, zo)
    );
}

#define Z_wxNonOwnedWindow_P(zv) \
    php_wxNonOwnedWindow_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxAnyButton_entry;
extern zend_object_handlers wxphp_wxAnyButton_object_handlers;
void php_wxAnyButton_destruction_handler(zend_resource*);

class wxAnyButton_php: public wxAnyButton{
    public:

    wxAnyButton_php():wxAnyButton(){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxAnyButton{
    wxAnyButton_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxAnyButton;

void php_wxAnyButton_free(void *object);
zend_object* php_wxAnyButton_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxAnyButton_functions[] = {
    PHP_ME(php_wxAnyButton, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_ME(php_wxAnyButton, GetBitmap, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxAnyButton, GetBitmapCurrent, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxAnyButton, GetBitmapDisabled, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxAnyButton, GetBitmapFocus, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxAnyButton, GetBitmapLabel, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxAnyButton, GetBitmapMargins, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxAnyButton, GetBitmapPressed, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxAnyButton, SetBitmap, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxAnyButton, SetBitmapCurrent, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxAnyButton, SetBitmapDisabled, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxAnyButton, SetBitmapFocus, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxAnyButton, SetBitmapLabel, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxAnyButton, SetBitmapMargins, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxAnyButton, SetBitmapPosition, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxAnyButton, SetBitmapPressed, NULL, ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxAnyButton * php_wxAnyButton_fetch_object(zend_object *obj) {
    return (zo_wxAnyButton *)(
        (char *)(obj) - XtOffsetOf(zo_wxAnyButton, zo)
    );
}

#define Z_wxAnyButton_P(zv) \
    php_wxAnyButton_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxWithImages_entry;
extern zend_object_handlers wxphp_wxWithImages_object_handlers;
void php_wxWithImages_destruction_handler(zend_resource*);

class wxWithImages_php: public wxWithImages{
    public:

    wxWithImages_php():wxWithImages(){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxWithImages{
    wxWithImages_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxWithImages;

void php_wxWithImages_free(void *object);
zend_object* php_wxWithImages_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxWithImages_functions[] = {
    PHP_ME(php_wxWithImages, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_ME(php_wxWithImages, SetImageList, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWithImages, GetImageList, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWithImages, AssignImageList, NULL, ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxWithImages * php_wxWithImages_fetch_object(zend_object *obj) {
    return (zo_wxWithImages *)(
        (char *)(obj) - XtOffsetOf(zo_wxWithImages, zo)
    );
}

#define Z_wxWithImages_P(zv) \
    php_wxWithImages_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxTextCompleter_entry;
extern zend_object_handlers wxphp_wxTextCompleter_object_handlers;
void php_wxTextCompleter_destruction_handler(zend_resource*);

class wxTextCompleter_php: public wxTextCompleter{
    public:

    
    wxString GetNext();
    bool Start(const wxString& prefix);
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxTextCompleter{
    wxTextCompleter_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxTextCompleter;

void php_wxTextCompleter_free(void *object);
zend_object* php_wxTextCompleter_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxTextCompleter_functions[] = {
    PHP_FE_END
};
#endif


static inline zo_wxTextCompleter * php_wxTextCompleter_fetch_object(zend_object *obj) {
    return (zo_wxTextCompleter *)(
        (char *)(obj) - XtOffsetOf(zo_wxTextCompleter, zo)
    );
}

#define Z_wxTextCompleter_P(zv) \
    php_wxTextCompleter_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxWindowModalDialogEvent_entry;
extern zend_object_handlers wxphp_wxWindowModalDialogEvent_object_handlers;
void php_wxWindowModalDialogEvent_destruction_handler(zend_resource*);

class wxWindowModalDialogEvent_php: public wxWindowModalDialogEvent{
    public:

    wxWindowModalDialogEvent_php(wxEventType commandType=wxEVT_NULL, int id=0):wxWindowModalDialogEvent(commandType, id){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxWindowModalDialogEvent{
    wxWindowModalDialogEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxWindowModalDialogEvent;

void php_wxWindowModalDialogEvent_free(void *object);
zend_object* php_wxWindowModalDialogEvent_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxWindowModalDialogEvent_functions[] = {
    PHP_ME(php_wxWindowModalDialogEvent, CloneMethod, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindowModalDialogEvent, GetDialog, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindowModalDialogEvent, GetReturnCode, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindowModalDialogEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxWindowModalDialogEvent * php_wxWindowModalDialogEvent_fetch_object(zend_object *obj) {
    return (zo_wxWindowModalDialogEvent *)(
        (char *)(obj) - XtOffsetOf(zo_wxWindowModalDialogEvent, zo)
    );
}

#define Z_wxWindowModalDialogEvent_P(zv) \
    php_wxWindowModalDialogEvent_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxPoint2DDouble_entry;
extern zend_object_handlers wxphp_wxPoint2DDouble_object_handlers;
void php_wxPoint2DDouble_destruction_handler(zend_resource*);

class wxPoint2DDouble_php: public wxPoint2DDouble{
    public:

    wxPoint2DDouble_php():wxPoint2DDouble(){}
    wxPoint2DDouble_php(wxDouble x, wxDouble y):wxPoint2DDouble(x, y){}
    wxPoint2DDouble_php(const wxPoint2DDouble& pt):wxPoint2DDouble(pt){}
    wxPoint2DDouble_php(const wxPoint2DInt& pt):wxPoint2DDouble(pt){}
    wxPoint2DDouble_php(const wxPoint& pt):wxPoint2DDouble(pt){}
    
    
    void InitProperties(){
        properties = new void*[2];

        properties[0] = &m_x;
        properties[1] = &m_y;
        
    }

    void UninitProperties(){
        delete[] properties;
    }

    void** properties;

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxPoint2DDouble{
    wxPoint2DDouble_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxPoint2DDouble;

void php_wxPoint2DDouble_free(void *object);
zend_object* php_wxPoint2DDouble_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxPoint2DDouble_functions[] = {
    PHP_ME(php_wxPoint2DDouble, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_ME(php_wxPoint2DDouble, SetVectorLength, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxPoint2DDouble, SetVectorAngle, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxPoint2DDouble, Normalize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxPoint2DDouble, GetVectorLength, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxPoint2DDouble, GetVectorAngle, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxPoint2DDouble, GetDotProduct, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxPoint2DDouble, GetDistanceSquare, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxPoint2DDouble, GetDistance, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxPoint2DDouble, GetCrossProduct, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxPoint2DDouble, GetFloor, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxPoint2DDouble, GetRounded, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxPoint2DDouble, __get, wxphp_others_get_args, ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxPoint2DDouble * php_wxPoint2DDouble_fetch_object(zend_object *obj) {
    return (zo_wxPoint2DDouble *)(
        (char *)(obj) - XtOffsetOf(zo_wxPoint2DDouble, zo)
    );
}

#define Z_wxPoint2DDouble_P(zv) \
    php_wxPoint2DDouble_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxPoint2DInt_entry;
extern zend_object_handlers wxphp_wxPoint2DInt_object_handlers;
void php_wxPoint2DInt_destruction_handler(zend_resource*);

class wxPoint2DInt_php: public wxPoint2DInt{
    public:

    wxPoint2DInt_php():wxPoint2DInt(){}
    wxPoint2DInt_php(wxInt32 x, wxInt32 y):wxPoint2DInt(x, y){}
    wxPoint2DInt_php(const wxPoint2DInt& pt):wxPoint2DInt(pt){}
    wxPoint2DInt_php(const wxPoint& pt):wxPoint2DInt(pt){}
    
    
    void InitProperties(){
        properties = new void*[2];

        properties[0] = &m_x;
        properties[1] = &m_y;
        
    }

    void UninitProperties(){
        delete[] properties;
    }

    void** properties;

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxPoint2DInt{
    wxPoint2DInt_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxPoint2DInt;

void php_wxPoint2DInt_free(void *object);
zend_object* php_wxPoint2DInt_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxPoint2DInt_functions[] = {
    PHP_ME(php_wxPoint2DInt, GetCrossProduct, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxPoint2DInt, GetDistance, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxPoint2DInt, GetDistanceSquare, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxPoint2DInt, GetDotProduct, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxPoint2DInt, GetVectorAngle, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxPoint2DInt, GetVectorLength, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxPoint2DInt, Normalize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxPoint2DInt, SetVectorAngle, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxPoint2DInt, SetVectorLength, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxPoint2DInt, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_ME(php_wxPoint2DInt, GetFloor, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxPoint2DInt, GetRounded, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxPoint2DInt, __get, wxphp_others_get_args, ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxPoint2DInt * php_wxPoint2DInt_fetch_object(zend_object *obj) {
    return (zo_wxPoint2DInt *)(
        (char *)(obj) - XtOffsetOf(zo_wxPoint2DInt, zo)
    );
}

#define Z_wxPoint2DInt_P(zv) \
    php_wxPoint2DInt_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxProgressDialog_entry;
extern zend_object_handlers wxphp_wxProgressDialog_object_handlers;
void php_wxProgressDialog_destruction_handler(zend_resource*);

class wxProgressDialog_php: public wxProgressDialog{
    public:

    wxProgressDialog_php(const wxString& title, const wxString& message, int maximum=100, wxWindow* parent=NULL, int style=wxPD_APP_MODAL|wxPD_AUTO_HIDE):wxProgressDialog(title, message, maximum, parent, style){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxProgressDialog{
    wxProgressDialog_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxProgressDialog;

void php_wxProgressDialog_free(void *object);
zend_object* php_wxProgressDialog_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxProgressDialog_functions[] = {
    PHP_ME(php_wxObject, UnShare, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxObject, UnRef, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxObject, IsSameAs, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxObject, Ref, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxObject, GetClassInfo, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxObject, IsKindOf, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxEvtHandler, Connect, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxEvtHandler, AddFilter, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxEvtHandler, AddPendingEvent, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxEvtHandler, DeletePendingEvents, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxEvtHandler, GetEvtHandlerEnabled, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxEvtHandler, GetNextHandler, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxEvtHandler, GetPreviousHandler, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxEvtHandler, IsUnlinked, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxEvtHandler, ProcessEvent, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxEvtHandler, ProcessEventLocally, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxEvtHandler, ProcessPendingEvents, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxEvtHandler, QueueEvent, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxEvtHandler, RemoveFilter, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxEvtHandler, SafelyProcessEvent, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxEvtHandler, SetEvtHandlerEnabled, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxEvtHandler, Unlink, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, FindWindowById, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, FindWindow, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Enable, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Disable, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Close, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetSizer, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetSizerAndFit, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetToolTip, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetWindowStyle, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetWindowStyleFlag, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Update, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, UpdateWindowUI, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Validate, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, WarpPointer, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, WindowToClientSize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, UnsetToolTip, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, UnreserveControlId, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, TransferDataToWindow, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, TransferDataFromWindow, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, ToggleWindowStyle, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Thaw, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, ShouldInheritColours, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetVirtualSize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetValidator, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetSize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetScrollbar, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetScrollPos, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, AcceptsFocus, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, AcceptsFocusFromKeyboard, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, AcceptsFocusRecursively, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, AddChild, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, AlwaysShowScrollbars, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, CacheBestSize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, CanScroll, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, CaptureMouse, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Center, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, CenterOnParent, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, CentreOnParent, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, ClearBackground, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, ClientToScreen, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, ClientToWindowSize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, ConvertDialogToPixels, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, ConvertPixelsToDialog, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, DragAcceptFiles, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, DoUpdateWindowUI, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, FindFocus, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, FindWindowByLabel, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, FindWindowByName, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Fit, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, FitInside, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Freeze, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetAutoLayout, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetBackgroundColour, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetBackgroundStyle, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetBestSize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetBestVirtualSize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetBorder, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetCapture, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetCaret, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetCharHeight, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetCharWidth, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Destroy, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, DestroyChildren, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetClientAreaOrigin, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetClientRect, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetClientSize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetContainingSizer, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetCursor, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetEffectiveMinSize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetEventHandler, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetExtraStyle, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetFont, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetForegroundColour, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetGrandParent, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetHandle, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetHelpText, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetHelpTextAtPoint, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetId, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetLabel, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetMaxClientSize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetMaxHeight, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetMaxSize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetMaxWidth, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetMinClientSize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetMinHeight, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetMinSize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetMinWidth, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetName, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetNextSibling, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetParent, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetPopupMenuSelectionFromUser, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetPosition, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetPrevSibling, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetRect, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetScreenPosition, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetScreenRect, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetScrollPos, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetScrollRange, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetScrollThumb, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetSize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetSizer, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetTextExtent, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetToolTip, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetToolTipText, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetUpdateClientRect, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetUpdateRegion, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetValidator, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetVirtualSize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetWindowBorderSize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetWindowStyle, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetWindowStyleFlag, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetWindowVariant, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, HandleAsNavigationKey, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, HandleWindowEvent, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, HasCapture, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, HasExtraStyle, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, HasFlag, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, HasFocus, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, HasMultiplePages, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, HasScrollbar, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, HasTransparentBackground, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Hide, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, HitTest, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, GetLayoutDirection, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, InitDialog, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, InheritAttributes, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, InformFirstDirection, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, InvalidateBestSize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, IsBeingDeleted, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, IsDoubleBuffered, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, IsEnabled, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, IsExposed, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, IsFrozen, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, IsRetained, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, IsScrollbarAlwaysShown, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, IsShown, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, IsShownOnScreen, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, IsThisEnabled, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, IsTopLevel, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, LineDown, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, LineUp, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Lower, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Move, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, MoveAfterInTabOrder, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, MoveBeforeInTabOrder, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Navigate, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, NavigateIn, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, NewControlId, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, PageDown, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, PageUp, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, PopupMenu, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, PostSizeEvent, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, PostSizeEventToParent, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, ProcessWindowEvent, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, ProcessWindowEventLocally, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, PushEventHandler, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Raise, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Refresh, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, RefreshRect, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, ReleaseMouse, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, RemoveChild, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, RemoveEventHandler, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, Reparent, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, ScreenToClient, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, ScrollLines, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, ScrollPages, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SendSizeEvent, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SendSizeEventToParent, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetAutoLayout, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetBackgroundColour, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetBackgroundStyle, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetCanFocus, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetCaret, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetClientSize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetConstraints, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetContainingSizer, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetCursor, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetDropTarget, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetEventHandler, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetExtraStyle, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetFocus, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetFocusFromKbd, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetFont, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetForegroundColour, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetHelpText, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetId, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetInitialSize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetLabel, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetLayoutDirection, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetMaxClientSize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetMinClientSize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetName, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetNextHandler, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetOwnBackgroundColour, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetOwnFont, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetOwnForegroundColour, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetPosition, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetPreviousHandler, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetThemeEnabled, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxWindow, SetWindowVariant, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxNonOwnedWindow, SetShape, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTopLevelWindow, SetTitle, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTopLevelWindow, Maximize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTopLevelWindow, GetTitle, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTopLevelWindow, ShowFullScreen, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTopLevelWindow, IsFullScreen, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTopLevelWindow, CanSetTransparent, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTopLevelWindow, CentreOnScreen, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTopLevelWindow, CenterOnScreen, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTopLevelWindow, GetDefaultItem, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTopLevelWindow, GetDefaultSize, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTopLevelWindow, GetIcon, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTopLevelWindow, GetIcons, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTopLevelWindow, GetTmpDefaultItem, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTopLevelWindow, IsActive, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTopLevelWindow, IsAlwaysMaximized, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTopLevelWindow, IsMaximized, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTopLevelWindow, Layout, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTopLevelWindow, RequestUserAttention, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTopLevelWindow, SetDefaultItem, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTopLevelWindow, SetMaxSize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTopLevelWindow, SetMinSize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTopLevelWindow, SetSizeHints, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTopLevelWindow, SetTmpDefaultItem, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTopLevelWindow, SetTransparent, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTopLevelWindow, ShouldPreventAppExit, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDialog, AddMainButtonId, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDialog, Centre, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDialog, Create, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDialog, CreateButtonSizer, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDialog, CreateSeparatedButtonSizer, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDialog, CreateSeparatedSizer, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDialog, CreateStdDialogButtonSizer, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDialog, EndModal, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDialog, GetAffirmativeId, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDialog, GetContentWindow, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDialog, GetEscapeId, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDialog, GetReturnCode, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDialog, Iconize, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDialog, IsIconized, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDialog, IsModal, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDialog, SetAffirmativeId, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDialog, ShowWindowModal, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDialog, ShowModal, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDialog, Show, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDialog, SetReturnCode, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDialog, SetLayoutAdaptationMode, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDialog, SetLayoutAdaptationLevel, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDialog, SetIcons, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDialog, SetIcon, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDialog, SetEscapeId, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDialog, SetLayoutAdaptationDone, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDialog, GetLayoutAdaptationDone, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDialog, GetLayoutAdaptationLevel, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDialog, EnableLayoutAdaptation, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDialog, DoLayoutAdaptation, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDialog, CanDoLayoutAdaptation, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxDialog, IsLayoutAdaptationEnabled, NULL, ZEND_ACC_STATIC|ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGenericProgressDialog, GetMessage, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGenericProgressDialog, GetRange, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGenericProgressDialog, GetValue, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGenericProgressDialog, Resume, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGenericProgressDialog, Pulse, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGenericProgressDialog, SetRange, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGenericProgressDialog, WasCancelled, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGenericProgressDialog, WasSkipped, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxProgressDialog, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxProgressDialog * php_wxProgressDialog_fetch_object(zend_object *obj) {
    return (zo_wxProgressDialog *)(
        (char *)(obj) - XtOffsetOf(zo_wxProgressDialog, zo)
    );
}

#define Z_wxProgressDialog_P(zv) \
    php_wxProgressDialog_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxLayoutConstraints_entry;
extern zend_object_handlers wxphp_wxLayoutConstraints_object_handlers;
void php_wxLayoutConstraints_destruction_handler(zend_resource*);

class wxLayoutConstraints_php: public wxLayoutConstraints{
    public:

    wxLayoutConstraints_php():wxLayoutConstraints(){}
    
    
    void InitProperties(){
        properties = new void*[8];

        properties[0] = &left;
        properties[1] = &top;
        properties[2] = &right;
        properties[3] = &bottom;
        properties[4] = &width;
        properties[5] = &height;
        properties[6] = &centreX;
        properties[7] = &centreY;
        
    }

    void UninitProperties(){
        delete[] properties;
    }

    void** properties;

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxLayoutConstraints{
    wxLayoutConstraints_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxLayoutConstraints;

void php_wxLayoutConstraints_free(void *object);
zend_object* php_wxLayoutConstraints_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxLayoutConstraints_functions[] = {
    PHP_ME(php_wxLayoutConstraints, AreSatisfied, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxLayoutConstraints, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_ME(php_wxLayoutConstraints, SatisfyConstraints, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxLayoutConstraints, __get, wxphp_others_get_args, ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxLayoutConstraints * php_wxLayoutConstraints_fetch_object(zend_object *obj) {
    return (zo_wxLayoutConstraints *)(
        (char *)(obj) - XtOffsetOf(zo_wxLayoutConstraints, zo)
    );
}

#define Z_wxLayoutConstraints_P(zv) \
    php_wxLayoutConstraints_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxGridCellAttrProvider_entry;
extern zend_object_handlers wxphp_wxGridCellAttrProvider_object_handlers;
void php_wxGridCellAttrProvider_destruction_handler(zend_resource*);

class wxGridCellAttrProvider_php: public wxGridCellAttrProvider{
    public:

    wxGridCellAttrProvider_php():wxGridCellAttrProvider(){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxGridCellAttrProvider{
    wxGridCellAttrProvider_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxGridCellAttrProvider;

void php_wxGridCellAttrProvider_free(void *object);
zend_object* php_wxGridCellAttrProvider_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxGridCellAttrProvider_functions[] = {
    PHP_ME(php_wxGridCellAttrProvider, GetAttr, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellAttrProvider, GetColumnHeaderRenderer, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellAttrProvider, GetCornerRenderer, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellAttrProvider, GetRowHeaderRenderer, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellAttrProvider, SetAttr, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellAttrProvider, SetColAttr, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellAttrProvider, SetRowAttr, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxGridCellAttrProvider, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxGridCellAttrProvider * php_wxGridCellAttrProvider_fetch_object(zend_object *obj) {
    return (zo_wxGridCellAttrProvider *)(
        (char *)(obj) - XtOffsetOf(zo_wxGridCellAttrProvider, zo)
    );
}

#define Z_wxGridCellAttrProvider_P(zv) \
    php_wxGridCellAttrProvider_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxGridColumnHeaderRenderer_entry;
extern zend_object_handlers wxphp_wxGridColumnHeaderRenderer_object_handlers;
void php_wxGridColumnHeaderRenderer_destruction_handler(zend_resource*);

class wxGridColumnHeaderRenderer_php: public wxGridColumnHeaderRenderer{
    public:

    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxGridColumnHeaderRenderer{
    wxGridColumnHeaderRenderer_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxGridColumnHeaderRenderer;

void php_wxGridColumnHeaderRenderer_free(void *object);
zend_object* php_wxGridColumnHeaderRenderer_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxGridColumnHeaderRenderer_functions[] = {
    PHP_FE_END
};
#endif


static inline zo_wxGridColumnHeaderRenderer * php_wxGridColumnHeaderRenderer_fetch_object(zend_object *obj) {
    return (zo_wxGridColumnHeaderRenderer *)(
        (char *)(obj) - XtOffsetOf(zo_wxGridColumnHeaderRenderer, zo)
    );
}

#define Z_wxGridColumnHeaderRenderer_P(zv) \
    php_wxGridColumnHeaderRenderer_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxGridColumnHeaderRendererDefault_entry;
extern zend_object_handlers wxphp_wxGridColumnHeaderRendererDefault_object_handlers;
void php_wxGridColumnHeaderRendererDefault_destruction_handler(zend_resource*);

class wxGridColumnHeaderRendererDefault_php: public wxGridColumnHeaderRendererDefault{
    public:

    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxGridColumnHeaderRendererDefault{
    wxGridColumnHeaderRendererDefault_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxGridColumnHeaderRendererDefault;

void php_wxGridColumnHeaderRendererDefault_free(void *object);
zend_object* php_wxGridColumnHeaderRendererDefault_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxGridColumnHeaderRendererDefault_functions[] = {
    PHP_ME(php_wxGridColumnHeaderRendererDefault, DrawBorder, NULL, ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxGridColumnHeaderRendererDefault * php_wxGridColumnHeaderRendererDefault_fetch_object(zend_object *obj) {
    return (zo_wxGridColumnHeaderRendererDefault *)(
        (char *)(obj) - XtOffsetOf(zo_wxGridColumnHeaderRendererDefault, zo)
    );
}

#define Z_wxGridColumnHeaderRendererDefault_P(zv) \
    php_wxGridColumnHeaderRendererDefault_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxGridCornerHeaderRenderer_entry;
extern zend_object_handlers wxphp_wxGridCornerHeaderRenderer_object_handlers;
void php_wxGridCornerHeaderRenderer_destruction_handler(zend_resource*);

class wxGridCornerHeaderRenderer_php: public wxGridCornerHeaderRenderer{
    public:

    
    void DrawBorder(const wxGrid& grid, wxDC& dc, wxRect& rect) const;
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxGridCornerHeaderRenderer{
    wxGridCornerHeaderRenderer_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxGridCornerHeaderRenderer;

void php_wxGridCornerHeaderRenderer_free(void *object);
zend_object* php_wxGridCornerHeaderRenderer_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxGridCornerHeaderRenderer_functions[] = {
    PHP_FE_END
};
#endif


static inline zo_wxGridCornerHeaderRenderer * php_wxGridCornerHeaderRenderer_fetch_object(zend_object *obj) {
    return (zo_wxGridCornerHeaderRenderer *)(
        (char *)(obj) - XtOffsetOf(zo_wxGridCornerHeaderRenderer, zo)
    );
}

#define Z_wxGridCornerHeaderRenderer_P(zv) \
    php_wxGridCornerHeaderRenderer_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxGridCornerHeaderRendererDefault_entry;
extern zend_object_handlers wxphp_wxGridCornerHeaderRendererDefault_object_handlers;
void php_wxGridCornerHeaderRendererDefault_destruction_handler(zend_resource*);

class wxGridCornerHeaderRendererDefault_php: public wxGridCornerHeaderRendererDefault{
    public:

    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxGridCornerHeaderRendererDefault{
    wxGridCornerHeaderRendererDefault_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxGridCornerHeaderRendererDefault;

void php_wxGridCornerHeaderRendererDefault_free(void *object);
zend_object* php_wxGridCornerHeaderRendererDefault_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxGridCornerHeaderRendererDefault_functions[] = {
    PHP_ME(php_wxGridCornerHeaderRendererDefault, DrawBorder, NULL, ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxGridCornerHeaderRendererDefault * php_wxGridCornerHeaderRendererDefault_fetch_object(zend_object *obj) {
    return (zo_wxGridCornerHeaderRendererDefault *)(
        (char *)(obj) - XtOffsetOf(zo_wxGridCornerHeaderRendererDefault, zo)
    );
}

#define Z_wxGridCornerHeaderRendererDefault_P(zv) \
    php_wxGridCornerHeaderRendererDefault_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxGridHeaderLabelsRenderer_entry;
extern zend_object_handlers wxphp_wxGridHeaderLabelsRenderer_object_handlers;
void php_wxGridHeaderLabelsRenderer_destruction_handler(zend_resource*);

class wxGridHeaderLabelsRenderer_php: public wxGridHeaderLabelsRenderer{
    public:

    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxGridHeaderLabelsRenderer{
    wxGridHeaderLabelsRenderer_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxGridHeaderLabelsRenderer;

void php_wxGridHeaderLabelsRenderer_free(void *object);
zend_object* php_wxGridHeaderLabelsRenderer_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxGridHeaderLabelsRenderer_functions[] = {
    PHP_ME(php_wxGridHeaderLabelsRenderer, DrawLabel, NULL, ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxGridHeaderLabelsRenderer * php_wxGridHeaderLabelsRenderer_fetch_object(zend_object *obj) {
    return (zo_wxGridHeaderLabelsRenderer *)(
        (char *)(obj) - XtOffsetOf(zo_wxGridHeaderLabelsRenderer, zo)
    );
}

#define Z_wxGridHeaderLabelsRenderer_P(zv) \
    php_wxGridHeaderLabelsRenderer_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxGridRowHeaderRenderer_entry;
extern zend_object_handlers wxphp_wxGridRowHeaderRenderer_object_handlers;
void php_wxGridRowHeaderRenderer_destruction_handler(zend_resource*);

class wxGridRowHeaderRenderer_php: public wxGridRowHeaderRenderer{
    public:

    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxGridRowHeaderRenderer{
    wxGridRowHeaderRenderer_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxGridRowHeaderRenderer;

void php_wxGridRowHeaderRenderer_free(void *object);
zend_object* php_wxGridRowHeaderRenderer_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxGridRowHeaderRenderer_functions[] = {
    PHP_FE_END
};
#endif


static inline zo_wxGridRowHeaderRenderer * php_wxGridRowHeaderRenderer_fetch_object(zend_object *obj) {
    return (zo_wxGridRowHeaderRenderer *)(
        (char *)(obj) - XtOffsetOf(zo_wxGridRowHeaderRenderer, zo)
    );
}

#define Z_wxGridRowHeaderRenderer_P(zv) \
    php_wxGridRowHeaderRenderer_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxGridRowHeaderRendererDefault_entry;
extern zend_object_handlers wxphp_wxGridRowHeaderRendererDefault_object_handlers;
void php_wxGridRowHeaderRendererDefault_destruction_handler(zend_resource*);

class wxGridRowHeaderRendererDefault_php: public wxGridRowHeaderRendererDefault{
    public:

    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxGridRowHeaderRendererDefault{
    wxGridRowHeaderRendererDefault_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxGridRowHeaderRendererDefault;

void php_wxGridRowHeaderRendererDefault_free(void *object);
zend_object* php_wxGridRowHeaderRendererDefault_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxGridRowHeaderRendererDefault_functions[] = {
    PHP_ME(php_wxGridRowHeaderRendererDefault, DrawBorder, NULL, ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxGridRowHeaderRendererDefault * php_wxGridRowHeaderRendererDefault_fetch_object(zend_object *obj) {
    return (zo_wxGridRowHeaderRendererDefault *)(
        (char *)(obj) - XtOffsetOf(zo_wxGridRowHeaderRendererDefault, zo)
    );
}

#define Z_wxGridRowHeaderRendererDefault_P(zv) \
    php_wxGridRowHeaderRendererDefault_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxPaletteChangedEvent_entry;
extern zend_object_handlers wxphp_wxPaletteChangedEvent_object_handlers;
void php_wxPaletteChangedEvent_destruction_handler(zend_resource*);

class wxPaletteChangedEvent_php: public wxPaletteChangedEvent{
    public:

    wxPaletteChangedEvent_php(wxWindowID winid=0):wxPaletteChangedEvent(winid){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxPaletteChangedEvent{
    wxPaletteChangedEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxPaletteChangedEvent;

void php_wxPaletteChangedEvent_free(void *object);
zend_object* php_wxPaletteChangedEvent_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxPaletteChangedEvent_functions[] = {
    PHP_ME(php_wxPaletteChangedEvent, GetChangedWindow, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxPaletteChangedEvent, SetChangedWindow, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxPaletteChangedEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxPaletteChangedEvent * php_wxPaletteChangedEvent_fetch_object(zend_object *obj) {
    return (zo_wxPaletteChangedEvent *)(
        (char *)(obj) - XtOffsetOf(zo_wxPaletteChangedEvent, zo)
    );
}

#define Z_wxPaletteChangedEvent_P(zv) \
    php_wxPaletteChangedEvent_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxFileTypeInfo_entry;
extern zend_object_handlers wxphp_wxFileTypeInfo_object_handlers;
void php_wxFileTypeInfo_destruction_handler(zend_resource*);

class wxFileTypeInfo_php: public wxFileTypeInfo{
    public:

    wxFileTypeInfo_php():wxFileTypeInfo(){}
    wxFileTypeInfo_php(const wxString& mimeType):wxFileTypeInfo(mimeType){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxFileTypeInfo{
    wxFileTypeInfo_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxFileTypeInfo;

void php_wxFileTypeInfo_free(void *object);
zend_object* php_wxFileTypeInfo_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxFileTypeInfo_functions[] = {
    PHP_ME(php_wxFileTypeInfo, AddExtension, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFileTypeInfo, SetDescription, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFileTypeInfo, SetOpenCommand, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFileTypeInfo, SetPrintCommand, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFileTypeInfo, SetShortDesc, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxFileTypeInfo, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxFileTypeInfo * php_wxFileTypeInfo_fetch_object(zend_object *obj) {
    return (zo_wxFileTypeInfo *)(
        (char *)(obj) - XtOffsetOf(zo_wxFileTypeInfo, zo)
    );
}

#define Z_wxFileTypeInfo_P(zv) \
    php_wxFileTypeInfo_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxDisplayChangedEvent_entry;
extern zend_object_handlers wxphp_wxDisplayChangedEvent_object_handlers;
void php_wxDisplayChangedEvent_destruction_handler(zend_resource*);

class wxDisplayChangedEvent_php: public wxDisplayChangedEvent{
    public:

    wxDisplayChangedEvent_php():wxDisplayChangedEvent(){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxDisplayChangedEvent{
    wxDisplayChangedEvent_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxDisplayChangedEvent;

void php_wxDisplayChangedEvent_free(void *object);
zend_object* php_wxDisplayChangedEvent_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxDisplayChangedEvent_functions[] = {
    PHP_ME(php_wxDisplayChangedEvent, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxDisplayChangedEvent * php_wxDisplayChangedEvent_fetch_object(zend_object *obj) {
    return (zo_wxDisplayChangedEvent *)(
        (char *)(obj) - XtOffsetOf(zo_wxDisplayChangedEvent, zo)
    );
}

#define Z_wxDisplayChangedEvent_P(zv) \
    php_wxDisplayChangedEvent_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxTimerRunner_entry;
extern zend_object_handlers wxphp_wxTimerRunner_object_handlers;
void php_wxTimerRunner_destruction_handler(zend_resource*);

class wxTimerRunner_php: public wxTimerRunner{
    public:

    wxTimerRunner_php(wxTimer& timer):wxTimerRunner(timer){}
    wxTimerRunner_php(wxTimer& timer, int milli, bool oneShot=false):wxTimerRunner(timer, milli, oneShot){}
    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxTimerRunner{
    wxTimerRunner_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxTimerRunner;

void php_wxTimerRunner_free(void *object);
zend_object* php_wxTimerRunner_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxTimerRunner_functions[] = {
    PHP_ME(php_wxTimerRunner, Start, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxTimerRunner, __construct, NULL, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
    PHP_FE_END
};
#endif


static inline zo_wxTimerRunner * php_wxTimerRunner_fetch_object(zend_object *obj) {
    return (zo_wxTimerRunner *)(
        (char *)(obj) - XtOffsetOf(zo_wxTimerRunner, zo)
    );
}

#define Z_wxTimerRunner_P(zv) \
    php_wxTimerRunner_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxToolBarToolBase_entry;
extern zend_object_handlers wxphp_wxToolBarToolBase_object_handlers;
void php_wxToolBarToolBase_destruction_handler(zend_resource*);

class wxToolBarToolBase_php: public wxToolBarToolBase{
    public:

    
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxToolBarToolBase{
    wxToolBarToolBase_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxToolBarToolBase;

void php_wxToolBarToolBase_free(void *object);
zend_object* php_wxToolBarToolBase_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxToolBarToolBase_functions[] = {
    PHP_ME(php_wxToolBarToolBase, Detach, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxToolBarToolBase, CanBeToggled, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxToolBarToolBase, Enable, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxToolBarToolBase, GetBitmap, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxToolBarToolBase, GetClientData, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxToolBarToolBase, GetControl, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxToolBarToolBase, GetDisabledBitmap, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxToolBarToolBase, GetDropdownMenu, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxToolBarToolBase, GetId, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxToolBarToolBase, GetKind, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxToolBarToolBase, GetLabel, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxToolBarToolBase, GetLongHelp, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxToolBarToolBase, GetNormalBitmap, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxToolBarToolBase, GetShortHelp, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxToolBarToolBase, GetStyle, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxToolBarToolBase, IsButton, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxToolBarToolBase, IsControl, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxToolBarToolBase, IsEnabled, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxToolBarToolBase, IsSeparator, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxToolBarToolBase, IsStretchable, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxToolBarToolBase, IsStretchableSpace, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxToolBarToolBase, IsToggled, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxToolBarToolBase, MakeStretchable, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxToolBarToolBase, SetDropdownMenu, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxToolBarToolBase, SetLabel, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxToolBarToolBase, SetLongHelp, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxToolBarToolBase, SetNormalBitmap, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxToolBarToolBase, SetShortHelp, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxToolBarToolBase, SetToggle, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxToolBarToolBase, Toggle, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxToolBarToolBase, SetDisabledBitmap, NULL, ZEND_ACC_PUBLIC)
    PHP_ME(php_wxToolBarToolBase, SetClientData, NULL, ZEND_ACC_PUBLIC)
    PHP_FE_END
};
#endif


static inline zo_wxToolBarToolBase * php_wxToolBarToolBase_fetch_object(zend_object *obj) {
    return (zo_wxToolBarToolBase *)(
        (char *)(obj) - XtOffsetOf(zo_wxToolBarToolBase, zo)
    );
}

#define Z_wxToolBarToolBase_P(zv) \
    php_wxToolBarToolBase_fetch_object(Z_OBJ_P(zv))
extern zend_class_entry* php_wxTextCompleterSimple_entry;
extern zend_object_handlers wxphp_wxTextCompleterSimple_object_handlers;
void php_wxTextCompleterSimple_destruction_handler(zend_resource*);

class wxTextCompleterSimple_php: public wxTextCompleterSimple{
    public:

    
    void GetCompletions(const wxString& prefix, wxArrayString& res);
    

    zval phpObj;
    wxPHPObjectReferences references;
};

BEGIN_EXTERN_C()
typedef struct _zo_wxTextCompleterSimple{
    wxTextCompleterSimple_php* native_object;
    wxphp_object_type object_type;
    int is_user_initialized;
    zend_object zo;
} zo_wxTextCompleterSimple;

void php_wxTextCompleterSimple_free(void *object);
zend_object* php_wxTextCompleterSimple_new(zend_class_entry *class_type);
END_EXTERN_C()

#ifdef WXPHP_INCLUDE_METHOD_TABLES
static zend_function_entry php_wxTextCompleterSimple_functions[] = {
    PHP_FE_END
};
#endif


static inline zo_wxTextCompleterSimple * php_wxTextCompleterSimple_fetch_object(zend_object *obj) {
    return (zo_wxTextCompleterSimple *)(
        (char *)(obj) - XtOffsetOf(zo_wxTextCompleterSimple, zo)
    );
}

#define Z_wxTextCompleterSimple_P(zv) \
    php_wxTextCompleterSimple_fetch_object(Z_OBJ_P(zv))
#endif //WXPHP_OTHERS_H_GUARD
